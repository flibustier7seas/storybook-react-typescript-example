const webpack = require("webpack");
const merge = require("webpack-merge");
const path = require("path");

const common = require("./webpack.common.js");

const config = merge(common, {
    mode: "development",

    // Overload for fixed error: Cannot use [chunkhash] or [contenthash] for chunk in '[name].[chunkhash].js' (use [hash] instead)
    output: {
        path: path.join(__dirname, "dist"),
        filename: "[name].js",
    },

    module: {
        rules: [
            // All files with a '.ts' or '.tsx' extension will be handled by 'ts-loader'.
            {
                test: /\.tsx?$/,
                loaders: [
                    // Babel need for react-hot-loader
                    {
                        loader: "babel-loader",
                        options: {
                            babelrc: true,
                            plugins: ["react-hot-loader/babel"],
                        },
                    },
                    "awesome-typescript-loader",
                ],
                exclude: path.resolve(__dirname, "node_modules"),
                include: path.resolve(__dirname, "src"),
            },
            {
                test: /\.css$/,
                use: [
                    { loader: "style-loader" },
                    {
                        loader: "typings-for-css-modules-loader",
                        options: {
                            banner:
                                "// This file is automatically generated by typings-for-css-modules.\n// Please do not change this file!",
                            namedExport: true,
                            camelCase: true,
                            //css-loader options
                            modules: true,
                            localIdentName: "[local]__[hash:base64:5]",
                            importLoaders: 1,
                        },
                    },
                ],
            },
            {
                test: /\.scss$/,
                use: [
                    { loader: "style-loader" },
                    {
                        loader: "typings-for-css-modules-loader",
                        options: {
                            banner:
                                "// This file is automatically generated by typings-for-css-modules.\n// Please do not change this file!",
                            //css-loader options
                            modules: true,
                            localIdentName: "[local]__[hash:base64:5]",
                            importLoaders: 1,
                        },
                    },
                    {
                        loader: "sass-loader",
                    },
                ],
            },
        ],
    },

    // Enable sourcemaps for debugging webpack's output.
    devtool: "inline-source-map",

    devServer: {
        contentBase: path.join(__dirname, "dist"),
        port: 9000,
        hot: true,
        historyApiFallback: true,
    },

    plugins: [
        new webpack.HotModuleReplacementPlugin(),
        new webpack.WatchIgnorePlugin([
            /css\.d\.ts$/, // ignore *.d.ts files
            /scss\.d\.ts$/, // ignore *.d.ts files
        ]),
    ],
});

// export default config;
module.exports = config;
